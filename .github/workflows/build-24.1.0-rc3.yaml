name: build-24.1.0-rc3
run-name: build-24.1.0-rc3
on:
  push: {}
  schedule:
  - cron: "7 3 * * SAT"  # 03:07 Every Saturday

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: eu.gcr.io/trouter-public
  REGISTRY_HOST: eu.gcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: mesa-24.1.0-rc3

jobs:
  build-srpm:
    runs-on: ubuntu-latest
    container:
      image: docker.io/library/fedora:40
    outputs:
      mesa_version: ${{ steps.output_vars.outputs.mesa_version }}
      mesa_git_sha: ${{ steps.output_vars.outputs.mesa_git_sha }}
      srpm_name: ${{ steps.output_vars.outputs.srpm_name }}
    steps:
    - name: install dependencies
      run: dnf install -y git rpm-build rpmdevtools
    - name: checkout
      uses: actions/checkout@v4
    - name: checkout mesa
      run: >
        git clone --depth=1 https://gitlab.freedesktop.org/mesa/mesa.git &&
        cd mesa &&
        git checkout 37bb30b32757888e3134ede4921b4e6ec01a84b7 &&
        cd ..
    - name: create rpm sources
      run: >
        mkdir -p ${HOME}/rpmbuild/SOURCES/ &&
        tar -czf ${HOME}/rpmbuild/SOURCES/mesa.tar.gz mesa &&
        cp Mesa-MLAA-License-Clarification-Email.txt ${HOME}/rpmbuild/SOURCES/ &&
        cp gnome-shell-glthread-disable.patch ${HOME}/rpmbuild/SOURCES/ &&
        cp valve.patch ${HOME}/rpmbuild/SOURCES/
    - name: export version vars
      run: >
        echo "MESA_VERSION=$(cat ./mesa/VERSION)" >> "$GITHUB_ENV" &&
        echo "MESA_GIT_SHA=$(GIT_DIR=./mesa/.git git rev-parse --short HEAD)" >> "$GITHUB_ENV"
    - name: build srpm
      run: rpmbuild -bs --define="ver ${MESA_VERSION}" --define="commitsha ${MESA_GIT_SHA}" mesa.spec
    - name: save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: srpms
        path: /github/home/rpmbuild/SRPMS
    - name: output_vars
      id: output_vars
      run: >
        echo "mesa_version=${MESA_VERSION}" >> "$GITHUB_OUTPUT" &&
        echo "mesa_git_sha=${MESA_GIT_SHA}" >> "$GITHUB_OUTPUT" &&
        echo "srpm_name=$(find ${HOME}/rpmbuild/SRPMS/ -type f -name '*.src.rpm')" >> "$GITHUB_OUTPUT" &&
        cat "$GITHUB_OUTPUT"

  build-rpm-i386:
    runs-on: ubuntu-latest
    needs:
    - build-srpm
    container:
      image: docker.io/library/fedora:40
      options: --privileged
    steps:
    - id: cache_restore
      name: restore cache
      uses: actions/cache/restore@v4
      with:
        key: build-rpm-i386__${{ needs.build-srpm.outputs.mesa_git_sha }}
        path: /github/home/rpmbuild/RPMS
    - name: install dependencies
      if: steps.cache_restore.outputs.cache-hit != 'true'
      run: dnf install -y git mock rpm-build rpmdevtools
    - name: checkout
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
    - name: restore artifacts
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/download-artifact@v4
      with:
        name: srpms
        path: /github/home/rpmbuild/SRPMS
    - name: build i386
      if: steps.cache_restore.outputs.cache-hit != 'true'
      run: >
        mock
        -r fedora-40-i386
        --resultdir ${HOME}/rpmbuild/RPMS
        --define "ver ${{ needs.build-srpm.outputs.mesa_version }}"
        --define "commitsha ${{ needs.build-srpm.outputs.mesa_git_sha }}"
        --rebuild ${{ needs.build-srpm.outputs.srpm_name }}
    - name: save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rpms-i386
        path: /github/home/rpmbuild/RPMS
    - id: cache_save
      name: save cache
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: build-rpm-i386__${{ needs.build-srpm.outputs.mesa_git_sha }}
        path: /github/home/rpmbuild/RPMS

  build-rpm-x86_64:
    runs-on: ubuntu-latest
    needs:
    - build-srpm
    container:
      image: docker.io/library/fedora:40
      options: --privileged
    steps:
    - id: cache_restore
      name: restore cache
      uses: actions/cache/restore@v4
      with:
        key: build-rpm-x86_64__${{ needs.build-srpm.outputs.mesa_git_sha }}
        path: /github/home/rpmbuild/RPMS
    - name: install dependencies
      if: steps.cache_restore.outputs.cache-hit != 'true'
      run: dnf install -y git mock rpm-build rpmdevtools
    - name: checkout
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/checkout@v4
    - name: restore artifacts
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/download-artifact@v4
      with:
        name: srpms
        path: /github/home/rpmbuild/SRPMS
    - name: build x86_64
      if: steps.cache_restore.outputs.cache-hit != 'true'
      run: >
        mock
        -r fedora-40-x86_64
        --resultdir ${HOME}/rpmbuild/RPMS
        --define "ver ${{ needs.build-srpm.outputs.mesa_version }}"
        --define "commitsha ${{ needs.build-srpm.outputs.mesa_git_sha }}"
        --rebuild ${{ needs.build-srpm.outputs.srpm_name }}
    - name: save artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rpms-x86_64
        path: /github/home/rpmbuild/RPMS
    - id: cache_save
      name: save cache
      if: steps.cache_restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        key: build-rpm-x86_64__${{ needs.build-srpm.outputs.mesa_git_sha }}
        path: /github/home/rpmbuild/RPMS

  build-image:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    needs:
    - build-rpm-i386
    - build-rpm-x86_64
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: restore artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        path: RPMS
    - name: list files
      run: ls -lahR RPMS
    - name: filter rpms
      run: find RPMS -type f -name '*.rpm' | egrep '(debuginfo|src)' | xargs rm -f
    - name: build
      run: >
        buildah build
        -f Containerfile
        --platform=linux/amd64
        -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        .
    - name: gcloud auth
      if: github.ref_name == 'main'
      uses: 'google-github-actions/auth@v2'
      with:
        project_id: trouter-public
        workload_identity_provider: projects/798549598312/locations/global/workloadIdentityPools/github/providers/my-repo
    - name: gcloud docker helper setup
      if: github.ref_name == 'main'
      run: gcloud auth configure-docker ${{ env.REGISTRY_HOST }} --quiet
    - name: push image
      if: github.ref_name == 'main'
      run: podman push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
